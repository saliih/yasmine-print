<?php

namespace PrintBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use JMS\Serializer\Annotation\ExclusionPolicy;
use JMS\Serializer\Annotation\Expose;
use JMS\Serializer\Annotation\Groups;
use JMS\Serializer\Annotation\VirtualProperty;
use JMS\Serializer\Annotation;
use JMS\Serializer\Annotation\Exclude;
use JMS\Serializer\Annotation\PreSerialize;
use JMS\Serializer\Annotation\PostSerialize;
use JMS\Serializer\Annotation\PostDeserialize;
use JMS\Serializer\Annotation\Type;
/**
 * Options
 *
 * @ORM\Table(name="options")
 * @ORM\Entity(repositoryClass="PrintBundle\Repository\OptionsRepository")
 * @ExclusionPolicy("ALL")
 */
class Options
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     * @Expose
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255)
     * @Expose
     */
    private $name;

    /**
     * @var string
     *
     * @ORM\Column(name="type", type="string", length=20)
     * @Expose
     */
    private $type;

    /**
     * @var float
     *
     * @ORM\Column(name="x", type="float", nullable=true)
     * @Expose
     */
    private $x;

    /**
     * @var float
     *
     * @ORM\Column(name="y", type="float", nullable=true)
     * @Expose
     */
    private $y;

    /**
     * @var float
     *
     * @ORM\Column(name="width", type="float", nullable=true)
     * @Expose
     */
    private $width;

    /**
     * @var float
     *
     * @ORM\Column(name="height", type="float", nullable=true)
     * @Expose
     */
    private $height;

    /**
     * @var string
     *
     * @ORM\Column(name="font", type="string", length=255, nullable=true)
     * @Expose
     */
    private $font;

    /**
     * @var float
     *
     * @ORM\Column(name="fontsize", type="float", nullable=true)
     * @Expose
     */
    private $fontsize;

    /**
     * @var bool
     *
     * @ORM\Column(name="bold", type="boolean")
     * @Expose
     */
    private $bold;

    /**
     * @var string
     *
     * @ORM\Column(name="color", type="string", length=10, nullable=true)
     * @Expose
     */
    private $color;

    /**
     * @var string
     *
     * @ORM\Column(name="align", type="string", length=10, nullable=true)
     * @Expose
     */
    private $align;

    /**
     * @ORM\ManyToOne(targetEntity="Template", inversedBy="options")
     * @ORM\JoinColumn(name="template_id", referencedColumnName="id", onDelete="CASCADE")
     **/
    private $template;
    /**
     * @property string $templateid
     * @Expose
     */
    private $templateid;
    /**
     * @PreSerialize
     */
    private function prepareForSerialization()
    {
        $this->templateid = $this->getTemplate()->getId();
    }
    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     *
     * @return Options
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set type
     *
     * @param string $type
     *
     * @return Options
     */
    public function setType($type)
    {
        $this->type = $type;

        return $this;
    }

    /**
     * Get type
     *
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Set x
     *
     * @param float $x
     *
     * @return Options
     */
    public function setX($x)
    {
        $this->x = $x;

        return $this;
    }

    /**
     * Get x
     *
     * @return float
     */
    public function getX()
    {
        return $this->x;
    }

    /**
     * Set y
     *
     * @param float $y
     *
     * @return Options
     */
    public function setY($y)
    {
        $this->y = $y;

        return $this;
    }

    /**
     * Get y
     *
     * @return float
     */
    public function getY()
    {
        return $this->y;
    }

    /**
     * Set width
     *
     * @param float $width
     *
     * @return Options
     */
    public function setWidth($width)
    {
        $this->width = $width;

        return $this;
    }

    /**
     * Get width
     *
     * @return float
     */
    public function getWidth()
    {
        return $this->width;
    }

    /**
     * Set height
     *
     * @param float $height
     *
     * @return Options
     */
    public function setHeight($height)
    {
        $this->height = $height;

        return $this;
    }

    /**
     * Get height
     *
     * @return float
     */
    public function getHeight()
    {
        return $this->height;
    }

    /**
     * Set font
     *
     * @param string $font
     *
     * @return Options
     */
    public function setFont($font)
    {
        $this->font = $font;

        return $this;
    }

    /**
     * Get font
     *
     * @return string
     */
    public function getFont()
    {
        return $this->font;
    }

    /**
     * Set fontsize
     *
     * @param float $fontsize
     *
     * @return Options
     */
    public function setFontsize($fontsize)
    {
        $this->fontsize = $fontsize;

        return $this;
    }

    /**
     * Get fontsize
     *
     * @return float
     */
    public function getFontsize()
    {
        return $this->fontsize;
    }

    /**
     * Set bold
     *
     * @param boolean $bold
     *
     * @return Options
     */
    public function setBold($bold)
    {
        $this->bold = $bold;

        return $this;
    }

    /**
     * Get bold
     *
     * @return bool
     */
    public function getBold()
    {
        return $this->bold;
    }

    /**
     * Set color
     *
     * @param string $color
     *
     * @return Options
     */
    public function setColor($color)
    {
        $this->color = $color;

        return $this;
    }

    /**
     * Get color
     *
     * @return string
     */
    public function getColor()
    {
        return $this->color;
    }

    /**
     * Set align
     *
     * @param string $align
     *
     * @return Options
     */
    public function setAlign($align)
    {
        $this->align = $align;

        return $this;
    }

    /**
     * Get align
     *
     * @return string
     */
    public function getAlign()
    {
        return $this->align;
    }

    /**
     * Set template
     *
     * @param \PrintBundle\Entity\Template $template
     *
     * @return Options
     */
    public function setTemplate(\PrintBundle\Entity\Template $template = null)
    {
        $this->template = $template;

        return $this;
    }

    /**
     * Get template
     *
     * @return \PrintBundle\Entity\Template
     */
    public function getTemplate()
    {
        return $this->template;
    }
}
