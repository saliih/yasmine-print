<?php

namespace User\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
    public function findByRole($role) {
        
        $qb=$this->createQueryBuilder('u')
            
            ->where('u.roles LIKE :roles')
            ->setParameter('roles', '%"' . $role . '"%');
        return $qb->getQuery()->getResult();
    }
    public function findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null){
        $qb = $this->getEntityManager()->createQueryBuilder();
        $expr = $this->getEntityManager()->getExpressionBuilder();
        if($this->getEntityName()!='region')
        {
            $qb->select( 'entity' )
                ->from( $this->getEntityName(), 'entity' );
        }


        foreach ( $criteria as $field => $value ) {
            if(is_array($value)){
                $str="";
                foreach($value as $val){
                    $str .= ' entity.' . $field. " LIKE '%".$val."%' or " ;
                }
                $str=substr($str,0,-3);
                $qb->andWhere(  $str );
            }else if(!is_numeric($value)){
                $qb->andWhere(  'entity.' . $field. " LIKE '%".$value."%'" );
            }else{
                if($field=="name" || $field=="email")
                    $field = "id";
                //echo $value;exit;
                $qb->andWhere( 'entity.' . $field ."=". $value  );
            }

        }

        if ( $orderBy ) {

            foreach ( $orderBy as $field => $order ) {

                $qb->addOrderBy( 'entity.' . $field, $order );
            }
        }

        if ( $limit )
            $qb->setMaxResults( $limit );

        if ( $offset )
            $qb->setFirstResult( $offset );
//echo $qb->getQuery()->getSQL(); exit;
        return $qb->getQuery()->getResult();

    }

}
